class Solution {
    private int len, wid;
    public boolean exist(char[][] board, String word) {
        len = board.length;
        wid = board[0].length;
        boolean[][] visited = new boolean[len][wid];
        for(int i =0; i<len;i++){
            for(int j =0; j<wid;j++){
                if(search(board, word, 0, i, j, visited))
                    return true;
            }
        }
        return false;
    }
    private boolean search(char[][] board, String word, int currIndex, int i, int j, boolean[][] visited){
        if(currIndex == word.length())
            return true;
        if(i < 0 || j < 0 || i >= len || j >= wid || visited[i][j])
            return false;
        if(board[i][j] != word.charAt(currIndex))
            return false;
        visited[i][j] = true;
        boolean result = search(board, word, currIndex+1, i+1, j, visited) || search(board, word, currIndex+1, i-1, j, visited) || search(board, word, currIndex+1, i, j-1, visited) || search(board, word, currIndex+1, i, j+1, visited);
        visited[i][j] = false;
        return result;
    }
}