class Solution {
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        Map<Integer, List<Integer>> graph = new HashMap<>();
        int result = 0;
        for(int i =0; i < n; i++)
        {
            if(i != headID)           
            {
                graph.putIfAbsent(manager[i], new ArrayList<>());
                graph.get(manager[i]).add(i);
            }
        }
        return dfs(headID, informTime[headID], informTime, graph);
    }
    private int dfs(int i, int currTime, int[] informTime, Map<Integer, List<Integer>> graph)
    {
        int temp = 0;
        if(!graph.containsKey(i))
            return currTime;
        for(int j: graph.get(i))
            temp = Math.max(temp, dfs(j, currTime + informTime[j], informTime, graph));
        return temp; 
    }
}