class Solution {
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        Map<Integer, Map<Integer, Integer>> graph = new HashMap<>();
        int len = manager.length, result = 0;
        for(int i =0; i < len; i++)
        {
            if(i != headID)           
            {
                graph.putIfAbsent(manager[i], new HashMap<>());
                graph.get(manager[i]).put(i, informTime[manager[i]]);
            }
        }
        Stack<int[]> stack = new Stack<>();
        stack.push(new int[]{headID, informTime[headID]});
        while(!stack.isEmpty())
        {
            int []temp = stack.pop();
            int employee = temp[0], time = temp[1];
            //System.out.println("Curr node = " + employee + " and curr time = " + time);
            if(!graph.containsKey(employee))
                result = Math.max(result, time);
            else
            {
                for(int j : graph.get(employee).keySet())
                {
                    stack.push(new int[]{j, time + informTime[j]});
                }
            }
        }
        return result;        
    }
}