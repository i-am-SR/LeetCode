class Solution {
    public boolean validateStackSequences(int[] pushed, int[] popped) {
        if(pushed.length != popped.length)
            return false;
        if(pushed.length == 0 && popped.length == 0)
            return true;
        Stack<Integer> stack = new Stack<>();
        int i=0,j=0;
        stack.push(pushed[i++]);
        while(true)
        {
            if(j < popped.length && !stack.isEmpty() && stack.peek() == popped[j])
            {
                stack.pop();
                j++;
            }
            else if(i >= pushed.length && (j>= popped.length || stack.peek() != popped[j]))
                break;
            else
                stack.push(pushed[i++]);
        }
        return stack.isEmpty();
    }
}