class Solution {
    public boolean canCross(int[] stones) {
        int len = stones.length;
        Map<Integer, Set<Integer>> lastJumpsToStone = new HashMap<>();
        for(int stone: stones){
            lastJumpsToStone.put(stone, new HashSet<>());
        }
        if(!lastJumpsToStone.containsKey(0))
            return false;
        lastJumpsToStone.get(0).add(0);
        for(int i = 0; i < len; i++){
            if(lastJumpsToStone.containsKey(stones[i])){
                for(int jump: lastJumpsToStone.get(stones[i])){
                    for(int j = (jump - 1); j <= (jump + 1); j++){
                        if(j > 0 && lastJumpsToStone.containsKey(stones[i] + j)){
                            if((stones[i] + j) == stones[len - 1])
                                return true;
                            lastJumpsToStone.get(stones[i] + j).add(j);
                        }
                    }
                }
            }
        }
        return false; 
    }
}