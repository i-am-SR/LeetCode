/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private int maxPathSum=Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        int temp=function(root);
        return Math.max(maxPathSum, temp);
    }
    private int function(TreeNode node)
    {
        if(node.val>maxPathSum)
            maxPathSum=node.val;
        if(node.left==null && node.right==null)
            return node.val;
        int left,right,x;
        if(node.left!=null)
            left=function(node.left);
        else
            left=0;
        if(node.right!=null)
            right=function(node.right);
        else 
            right=0;
        if(left+right+node.val>maxPathSum)
            maxPathSum=left+right+node.val;
        if(left<=0 && right<=0)
            return node.val;
        else
        {
            x=(left>right)?(node.val+left):(node.val+right);
            if(x>maxPathSum)
                maxPathSum=x;
            return x;
        }
    }
}