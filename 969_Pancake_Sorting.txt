class Solution {
    public List<Integer> pancakeSort(int[] arr) {
        List<Integer> res = new ArrayList<>();
        int n = arr.length;
        while(n > 1){
          int maxElemIdx = -1;
          int maxElem = Integer.MIN_VALUE;
          for(int i = 0; i < n ; i++){
            if(arr[i] > maxElem){
              maxElem = arr[i];
              maxElemIdx = i;
            } 
          }
          // System.out.println(maxElem + " index = " + maxElemIdx);
          if(maxElemIdx != (n-1)){
              if(maxElemIdx != 0){
                res.add(maxElemIdx + 1);
                arr = flipArray(arr, maxElemIdx);
              }
              res.add(n);
              arr = flipArray(arr, n-1);
          }
          n--;
        }
        return res;
    }
    private static int[] flipArray(int[] arr, int x){
        for(int i = 0;i <= x/2; i++){
          int temp = arr[i];
          arr[i] = arr[x-i];
          arr[x-i] = temp;
        }
        return arr;
    }
}