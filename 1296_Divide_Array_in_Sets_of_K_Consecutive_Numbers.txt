class Solution {
    public boolean isPossibleDivide(int[] nums, int k) {
        Map<Integer, Integer> freq = new TreeMap<>();
        for(int num: nums)
        {
            freq.put(num, freq.getOrDefault(num, 0)+ 1);
        }
        for(int x: freq.keySet())
        {
            if(freq.get(x) > 0)
            {
                for(int i = k-1; i >= 0; i--)
                {
                    if(freq.getOrDefault(x + i, 0) < freq.get(x)) // the freq of the (k-1)th number from x should be atleast the freq of x
                        return false;
                    freq.put(x + i, freq.get(x + i) - freq.get(x));
                }
            }
        }
        return true;
    }
}